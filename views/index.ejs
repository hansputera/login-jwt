<!DOCTYPE html>
<html lang="en">
<head>
    <%- include("../layout/header.ejs"); %>
</head>
<body class="text-center">
    <nav class="navbar navbar-dark bg-dark">
        <a class="navbar-brand" href="#">JWT</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarContext" aria-controls="navbarContext" aria-expanded="false" aria-label="toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>

        <!-- Navbar context -->

        <div class="collapse navbar-collapse" id="navbarContext">
            <ul class="navbar-nav">
                <li class="nav-item active">
                    <a href="#" class="nav-link">Home <span class="sr-only">(current)</span></a>
                </li>
                
                <% if (!req.session.isLogged) { %>
                    <script>
                        const token = window.localStorage.getItem("token");
                        const wasLogged = window.localStorage.getItem("hasLogged");

                        if (token && !wasLogged) {
                            window.localStorage.removeItem("token");
                            window.localStorage.removeItem("identify");
                            console.log('[SESSION_DELETED]: We have delete your local storage!');
                        }

                    
                    </script>
                    <li class="nav-item">
                        <a onclick="register()" id="klikitit" class="nav-link">Register</a>
                    </li>
                <% } else { %>
                    <li class="nav-item">
                        <a onclick="logout()" class="nav-link">Logout</a>
                    </li>
                <% } %>
            </ul>
        </div>
    </nav>

    <div class="jumbotron">
    
        <% if (!isLogged) { %>
        <div id="hasLogged">
        <div class="form-group">
            <label for="username">Username</label>
            <input type="text" id="username" required>
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" minlength="8" maxlength="18" required>
        </div>
        <div class="form-group">
            <label for="email">Email</label>
            <input type="email" id="email" required aria-describedby="emailInfo">
            <small id="emailInfo" class="form-text text-muted">We'll never share your email with anyone else!</small>
        </div>
        <button onclick="forceLink()" type="submit" class="btn btn-primary">Submit</button>
    </div>
    <% } else { %>
        <h1>Hi <div class="namaUser"></div></h1>
        <br />
        <button type="submit" class="btn btn-danger" onclick="logout()">Logout</button>
    <% } %>
</div>


    <script>
        <% if (!req.session.isLogged) { %>
                    if (wasLogged == "true") {
                        document.querySelectorAll("li")[1].innerHTML = `<a onclick="login()" class="nav-link">Login</a>`;
        
                            const loginTemp = `
                            <div class="form-group">
                                <label for="username">Username</label>
                                <input type="text" id="username" required>    
                            </div>
                            <div class="form-group">
                                <label for="password">Password</label>
                                <input type="password" id="password" required>
                            </div>
                            <button onclick="login()" type="submit" class="btn btn-primary">Login</button>
                            `;

                            document.getElementById("hasLogged").innerHTML = loginTemp;
                        }
                        <% } %>
        function isEmpty(data) {
            if (!data || data == "") return true;
            else return false;
        }
        <% if (req.session.isLogged) { %>
            document.querySelectorAll("li")[1].innerHTML = `<a onclick="login()" class="nav-link">Login</a>`;
        
        if (window.localStorage.getItem("token")) {
            document.querySelector("[class=\"namaUser\"]").innerHTML = JSON.parse(window.localStorage.getItem("identify")).userName.replace(/\s/gi, "");
        }
        <% } %>
        function forceLink() {
            document.getElementById("klikitit").click();
        }

        function login() {
            const username = document.getElementById("username").value,
                  password = document.getElementById("password").value;

        if (!window.localStorage.getItem("identify")) {
            window.localStorage.clear();
            console.log('Resetting hasLogged!');
            window.location.reload();
        }
         if (isEmpty(username) || isEmpty(password)) {
             return swal('Empty not allowed', 'Enter all form value to register!', 'error');
         }

         const identify = JSON.parse(window.localStorage.getItem("identify"));
         if (identify.userName != username) {
             return swal('Failed', 'Wrong Username!', 'error');
         } else if (identify.password != password) {
             return swal('Failed', 'Wrong Password!', 'error');
         } else {
             const token = window.localStorage.getItem("token");
             if (!token) {
                return swal({
                    title: "Failed",
                    text: "Something was wrong in your local storage!",
                    icon: "error"
                }).then((clicked) => {
                    if (clicked) {
                        console.log('[LOCAL_STORAGE]: Resetting Data!');
                        window.localStorage.clear();
                        // Clearing all data in local storage.
                        window.close();
                        window.open("/");
                    } else {
                        console.log('[LOCAL_STORAGE]: Resetting Data!');
                        window.localStorage.clear();
                        // Clearing all data in local storage.
                        window.close();
                        window.open("/");
                    }
                });
             } else {
                 fetch(`/verify_token?token=${token}&password=${identify.password}`, { method: "POST" })
                 .then((res) => res.json()).then((result) => {
                    if (!result.success) {
                        return swal({
                    title: "Failed",
                    text: "Something was wrong in Server!",
                    icon: "error"
                }).then((clicked) => {
                    if (clicked) {
                        console.log('[LOCAL_STORAGE]: Resetting Data!');
                        window.localStorage.clear();
                        // Clearing all data in local storage.
                        window.close();
                        window.open("/");
                    } else {
                        console.log('[LOCAL_STORAGE]: Resetting Data!');
                        window.localStorage.clear();
                        // Clearing all data in local storage.
                        window.close();
                        window.open("/");
                    }
                });
                    } else {
                        fetch(`/granted_login?token=${token}&password=${identify.password}`, {
                            method: "POST"
                        }).then((res) => res.json()).then((result_1) => {
                            console.log('[SYSTEM_LOCAL]: Login has Granted!');
                            window.close();
                            window.open("/");
                        });
                    }
                 }).catch(e => {
                    return swal({
                    title: "Failed",
                    text: e,
                    icon: "error"
                }).then((clicked) => {
                    if (clicked) {
                        console.log('[LOCAL_STORAGE]: Resetting Data!');
                        window.localStorage.clear();
                        // Clearing all data in local storage.
                        window.close();
                        window.open("/");
                    } else {
                        console.log('[LOCAL_STORAGE]: Resetting Data!');
                        window.localStorage.clear();
                        // Clearing all data in local storage.
                        window.close();
                        window.open("/");
                    }
                });
                 });
             }
         }
        }
        function logout() {
            swal({
                title: "Are you sure want logout?",
                text: "You can login but it's need time!",
                dangerMode: true
            }).then((clicked) => {
                if (clicked) {
                    window.close();
                    window.open("/logout");
                } else {
                    swal({
                        title: "Nice choose!",
                        text: "Your session will keep save to logged",
                        icon: "info"
                    });
                }
            });
        }

        

        function register() {
            console.log('[LOGIN]: Clicked');
            const username = document.getElementById("username").value,
                  password = document.getElementById("password").value,
                  email = document.getElementById("email").value;
            
            if (window.localStorage.getItem("token") && window.localStorage.getItem("token").length < 345) {
                return swal({
                    title: `Sorry ${JSON.parse(window.localStorage.getItem("identify")).userName}` ,
                    text: "You already have session!",
                    icon: "info"
                });
            }
            if (isEmpty(username) || isEmpty(password) || isEmpty(email)) {
                return swal('Empty not allowed', 'Enter all form value to register!', 'info');
            }
           swal({
                title: "Maintenance Alert",
                text: "We can't be sure that login is broken or no.",
                icon: "warning",
                button: {
                    text: "Login",
                    closeModal: false
                }
            }).then((clicked) => {
                if (clicked) {
                    fetch(`/inputUser?username=${username}&password=${password}&email=${email}`, { method: "POST" })
                    .then(a => a.json()).then(result => {
                        if (!result.success) {
                            return swal('Failed', 'failed because ' + result.message, 'error');
                        } else {
                            swal({
                                title: "Successfuly",
                                text: "Your session has saved!",
                                icon: "success"
                            });
                            window.localStorage.setItem("hasLogged", true);
                            window.localStorage.setItem("token", result.result.token);
                            window.localStorage.setItem("identify", JSON.stringify(result.result.data));
                            swal.stopLoading();
                            window.location.reload();
                        }
                    });
                } else {
                    swal({
                        title: "Canceled",
                        text: "You have not press button",
                        icon: "success"
                    });
                    swal.stopLoading();
                    swal.close();
                }
            });
        }
        
    </script>
</body>
</html>